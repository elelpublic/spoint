/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'lars' at '01.02.16 12:33' with Gradle 2.4
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.4/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'ivy-publish'
apply plugin: 'groovy'

group = 'com.infodesire'
version = '0.0.1'
mainClassName = 'com.infodesire.spoint.Main'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile (
      'org.slf4j:slf4j-api:1.7.12',
      'org.apache.httpcomponents:httpclient:4.5.1',
      'com.google.guava:guava:19.0'
    )
    

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile (
      
      'junit:junit:4.12',
      'org.spockframework:spock-core:1.0-groovy-2.4',

      // groovy
      'org.codehaus.groovy:groovy-all:2.4.1',
      'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
      
    )
}


compileJava {
  sourceCompatibility = 1.6
  targetCompatibility = 1.6
}

eclipse {
  classpath {
    //customizing the classes output directory:
    defaultOutputDir = file('eclipse-build')
  }
  pathVariables(
    'GRADLE_USER_HOME': gradle.gradleUserHomeDir
  )
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'src'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
  publications {
    ivyJava( IvyPublication ) {
      from components.java
      artifact(sourcesJar) {
                type "source"
                conf "runtime"
            }
    }
  }
  repositories {
    ivy {
      // there is a lot of legacy to adhere to here:
        url 'file://s/repository/maven'
        layout 'pattern' , {
              artifact '[organisation].[module]/[type]s/[artifact]-[revision](.[ext])'
          }
      }
  }
}

// MAC OS X: do not show dock icon:
startScripts{
    doLast{
        unixScript.text = unixScript.text.replace('DEFAULT_JVM_OPTS=""', 'DEFAULT_JVM_OPTS="-Dapple.awt.UIElement=true"')
    }
}


